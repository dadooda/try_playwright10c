
#
# –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ —à–µ–ª–ª–µ.
#

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏.
_CMF_OUT_PATH="tests-out/"
_CMF_TEST_PATH="tests/"
_CMF_UI_PORT="3333"

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã.
t() {
  _cmf_ensure_testpwd || return 1

  # AF: TODO: –†–∞–∑–±–∏–ª –Ω–∞ `_t_basic`, `_t_regular`.

  # –°—Ç–∞—Ä—Ç–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç. –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ `tsc`.
  # (set -x; npx playwright test "$@")

  # –û–±—ã—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç. –ö–æ–≥–¥–∞ –ø—Ä–æ–µ–∫—Ç –±–µ–∑ `tsc` —É–∂–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è.
  (
    set -x
    npx tsc -p "${_CMF_TEST_PATH}" && npx playwright test -c "${_CMF_OUT_PATH}" "$@"
  )
}

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –≤ —Ä–µ–∂–∏–º–µ UI. ü§ò
ui() {
  #_cmf_ui_basic
  _cmf_ui_compiled
}

# –ó–∞–ø—É—Å–∫–∞–µ–º UI –∏ watch-–∫–æ–º–ø–∏–ª—è—Ü–∏—é.
uiw() {(
  echo "Starting background UI server..."
  _cmf_ui_compiled &
  sleep 1
  echo "Starting TS compilation in watch mode. Press Ctrl+C to terminate."
  watch
)}

# –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –∏ –ø–µ—Ä–µ–∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º `tests/` –∫–æ–≥–¥–∞ –Ω–∞–¥–æ.
watch() {
  _cmf_ensure_testpwd || return 1

  (set -x; npx tsc -p "${_CMF_TEST_PATH}" -w)
}

#---------------------------------------

_cmf_ensure_testpwd() {
  [ -r "package.json" ] || {
    echo "Error: \`package.json\` is not found. Please step into the right directory." >&2
    return 1
  }
}

# `ui` -- –Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç.
_cmf_ui_basic() {
  _cmf_ensure_testpwd || return 1

  local A=(
    --ui
    --ui-host 0.0.0.0
    --ui-port ${_CMF_UI_PORT}
  )

  (set -x; npx playwright test ${A[@]} "$@")
}

# `ui` -- –≤–∞—Ä–∏–∞–Ω—Ç —Å –∫–æ–º–ø–∏–ª—è—Ü–∏–µ–π TS.
_cmf_ui_compiled() {
  _cmf_ensure_testpwd || return 1

  local A=(
    -c "${_CMF_OUT_PATH}"
    --ui
    --ui-host 0.0.0.0
    --ui-port ${_CMF_UI_PORT}
  )

  (set -x; npx playwright test ${A[@]} "$@")
}
